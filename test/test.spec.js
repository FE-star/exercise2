const add = require('../lib/add')

describe('大数相加add方法', function () {

  test('字符串"42329"加上字符串"21532"等于"63861"', function () {
    expect(add('42329', '21532')).toBe('63861')
  })

  test('"843529812342341234"加上"236124361425345435"等于"1079654173767686669"', function () {
    expect(add('843529812342341234', '236124361425345435')).toBe('1079654173767686669')
  })

  // 进位
  test('"99"加上"1"等于"100"', function () {
    expect(add('99', '1')).toBe('100')
  })

  // 不支持小数
  test('"10000.1"加上"0.01" 抛出错误', function () {
    expect(() => add('10000.1', '0.01')).toThrow()
  })

  // 补充极端的情况 0
  test('"0"加上"123456789"等于"123456789"', function () {
    expect(add('0', '123456789')).toBe('123456789')
  })

  // 不支持负数
  test('"-123456789"加上"123456789" 抛出错误', function () {
    expect(() => add('-123456789', '123456789')).toThrow()
  })

  // 补充触发错误的情况
  test('"a"加上"1" 抛出错误', function () {
    expect(() => add('a', '1')).toThrow()
  })

  // 0开头的数字在我这也是非法的
  test('"001"加上"1" 抛出错误', function () {
    expect(() => add('001', '1')).toThrow()
  })

  // 不支持符号
  test('"+001"加上"1" 抛出错误', function () {
    expect(() => add('001', '1')).toThrow()
  })

})
